language: scala
dist: trusty

addons:
  chrome: stable
  apt:
      # These are all scala-native dependencies. To find what othen dependencies
      # are allowed and what are their sources, see
      # https://docs.travis-ci.com/user/installing-dependencies/#Identifying-the-source-for-a-missing-package
    sources:
      - debian-sid
    packages:
      - clang-3.8=1:3.8-2ubuntu3~trusty5
      - libllvm3.8v4=1:3.8-2ubuntu3~trusty5
      - libclang-common-3.8-dev=1:3.8-2ubuntu3~trusty5
      - libclang1-3.8=1:3.8-2ubuntu3~trusty5
      - llvm-3.8=1:3.8-2ubuntu3~trusty5
      - llvm-3.8-dev=1:3.8-2ubuntu3~trusty5
      - llvm-3.8-runtime=1:3.8-2ubuntu3~trusty5
      - libgc-dev=1:7.2d-5ubuntu2.1
      - libunwind8
      - libunwind8-dev
      - make

scala:
  - 2.11.11

# Tricks to avoid unnecessary cache updates, from
# http://www.scala-sbt.org/0.13/docs/Travis-CI-with-sbt.html
sudo: false

# Test the two most common implementations of Java 8, Oracle's and OpenJDK
jdk:
  - oraclejdk8
  - openjdk8

script:
  # For now sbt coverage only works with Scala JVM
  #
  # Setup custom prefix paths so that re2 library is correctly loaded from the
  # /tmp/re2/usr/ prefix
  - export LD_LIBRARY_PATH=/tmp/re2/usr/lib/ && sbt -DnativeLinkingOptions="-L/tmp/re2/usr/lib/" -DnativeCompileOptions="-I/tmp/re2/usr/include/" "; clean; helloNative/test"
  - sbt "; coverage; helloJVM/test; coverageReport; coverageOff"
  - sbt -DtestBackend=jsdom "; helloJS/fastOptJS; helloJS/fastOptJS::webpack; helloJS/test"
  - sbt -DtestBackend=phantomjs helloJS/test
  - sbt -Dwebdriver.chrome.driver=/tmp/chromedriver_download/chromedriver -DtestBackend=selenium-chrome helloJS/test

# <Comment>
# Tricks to avoid unnecessary cache updates, from
# http://www.scala-sbt.org/0.13/docs/Travis-CI-with-sbt.html
cache:
  directories:
    - $HOME/.ivy2/cache/
    - $HOME/.sbt/boot/
    #- /tmp/re2/
    #- /tmp/chromedriver_download/

before_cache:
  # Cleanup the cached directories to avoid unnecessary cache updates
  - find $HOME/.ivy2/cache -name "ivydata-*.properties" -print -delete
  - find $HOME/.sbt        -name "*.lock"               -print -delete
  - rm -rf /tmp/re2/.git
# </Comment>

before_script:
  # launch a headlessX server where web browser tests will open its windows
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3

before_install:
  # Install chromedriver, used for executing tests with Google Chrome
  - test -d /tmp/chromedriver_download/ || (mkdir /tmp/chromedriver_download && wget https://chromedriver.storage.googleapis.com/2.31/chromedriver_linux64.zip -O /tmp/chromedriver_download/chromedriver_linux64.zip && test $(sha256sum /tmp/chromedriver_download/chromedriver_linux64.zip | cut -d' ' -f1) = 3e372ef676beb3a03aba72089ec0624bb9d3b52597635f907d4c23390fb485a0 && unzip /tmp/chromedriver_download/chromedriver_linux64.zip -d /tmp/chromedriver_download && chmod 777 /tmp/chromedriver_download/chromedriver)
  # install re2 like scala-native does but in /tmp so that it doesn't require
  # sudo:
  # https://github.com/scala-native/scala-native/blob/master/bin/travis_setup.sh
  - BACK=$(pwd); test -d /tmp/re2 || (export CXX=clang++-3.8 && cd /tmp/ && git clone https://code.googlesource.com/re2 && cd re2 && echo d && git checkout e2deff36afd0a71adbf71cb11fba71ed2a407e4f && make -j4 test && make install prefix=/tmp/re2/usr/ && make testinstall prefix=/tmp/re2/usr/); cd $BACK

install:
  # specify node.js version
  - . $HOME/.nvm/nvm.sh
  - nvm install 6.11.1
  - nvm use 6.11.1
  - npm install

after_success:
  # Send coverage report to codecov
  - bash <(curl -s https://codecov.io/bash)

notifications:
  on_success: change
  email:
    recipients:
      # generated using:
      #
      # gem install travis
      # travis encrypt email@example.com -r nVotesOrg/scala-js-basic-example
      #
      # Read more in: https://docs.travis-ci.com/user/encryption-keys/
      secure: "sudlB7XaEq3mMQ/jSJPtssQaTL9i6zrHpF4Xa0TKHX69nkSg7/Aq/Z37Qe4o1ABmTImHc/b5ipdGAxC5OCVuRazDdh7P7e24QFPETEsWdmVRVS3/6DGAYIbugA937Zw47LarK3v6OQJfGYcj1scRfRqDwrO4ngoIMawwFSo209COaniCPnGi7gAm/BNwZkS0PwdxQPSTNrZAgR5VKawoZHJZDosQE6CnpjFBnfa/JZDYfj/AIk0U7ygpRWiO5Rcndudc/jr69bz/6EpUcwwAQHg6RnzX2fCoCgyOVlzTPHNb3MUWV8CBe5EK20PSxijzRouY0zH0Mx9TQq9GIJrD75IJ8vYtdIutrfz9EX9sMS5grfnielxZleeQ6mXD6CrseVmL9RJFPXmZZay1uJ0fhg+w2Rc1wK7FaDgGLueKBSWUQmx79K93OsPhC/FqCUCsk6ua6lqtv2v6uBx54KJnU7pTTkgb+/lrMMOrDkR7qbvRt/613TqxehgK/zA+j4VKw+7XrViYUJ65iM0n6ljSbDbw5BZh9cssRY7vyXW4gTx4m9NiebXiTy8UZ2EJq9X/U+5T9KvcOpTBdKBxYrDHftZoSPb5itty3g4TwdCUA8dh7WunK4KBYdlWx6iLvY/5O0w6V3yDwoYluakp/MG5ioYnwk8kRQ0uYMc1qMriuPE="
env:
  global:
    # This is the CODECOV environment token, used by the script that sends the
    # coverage report to codecov.io
    secure: "qOBO+4Bd81kH+XYPfCOVxC+hmO3pYRbBSdcW9LpiKcJTDg5/0NNbfviVvAulzdoBFS+sAuh16r6tddeaqMfZsQ1q8lZKV6W9gXmupovUCHUb+KyOjJ0nNoNFkwnmQgNkFVjlrB8oWYpmXLpOTlij0eKIRx+HdAEA8/lyIkIynABUIxK4Viq9am7zoDyb+74YLt2IKYdOy7yKckWHdyf8Vuq65NvyMhcBzC4mVSJUPVwcjWbcIMN5VSSRuRZhGkjpcNOzc5dKBE2s86vJwcWNnmeySgS8RZDszI6KJDo8s5mgn/UwHWiaJ4S71z8EjcYowltzFrR+4oj510McNktDdMxmqmKNnuKi1T5slKBPdsMAK18nV3UJQrVO6w6wUMZyiqd2Z+tzs1C/1QR7ZCVNCX/7i/lYgqpIkEa4wDIBYccXwbxemswjp8fuK18LxXbM22a50TMwAkMSl8g5qWEb5kfn2eVhMfHmFppHhn3r4+pSlS4MvdcD9IEqZ3TyOgk1OO/iJHbkKGkSU1yYfYd6gpIAlV+vTk2tl4dtYhBHDb5HZKM7tyoAye29Eh+U1e1I6bjU6p8H4fcNlx6JahEBYrWJrLodF0CSRrmJD9IZ5hKzr11nWMQiZH+guuwosCmgdGM49xSoXjw8TesPbwGUOFvcEkkeqP2UkBRKLGaFgjc="
